server:
  port: 8080
  servlet:
    context-path: /api  #指定上下文路径 也就是说 要输入localhost:8080/api 才能访问到
spring:
  application:
    name: zx-picture-backend-DDD
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/zx_picture
    username: root
    password: 123456
  servlet:
    multipart:
      max-file-size: 10MB #设置最大上传文件大小
  profiles:
    active: local
    #redis配置
  redis:
      host: 192.168.88.130
      port: 6379
      database: 1
      timeout: 5000 #设置连接时间 5秒后失败
      password: 123456
  # 空间图片分表
  shardingsphere:
    datasource: #链接数据库
      names: zx_picture
      zx_picture:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/yu_picture
        username: root
        password: 123456
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: zx_picture.tb_picture
            #动态分表 actual-data-nodes 一般情况下是指定一段分表的范围，zx_picture.tb_picture${}
            #但是由于 spaceId 是长整型，范围太大，无法通过指定范围将所有分表名称包含 这里我们需要自行设置分表名称
            table-strategy:
              standard:
                sharding-column: spaceId #根据什么进行分表 分表字段
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED #自行实现分表class类
            props:
              strategy: standard
              algorithmClassName: com.katomegumi.zxpicture.shared.sharding.PictureShardingAlgorithm
    props:
      sql-show: true #日志打印

mybatis-plus:
  configuration:
    # MyBatis 配置
    map-underscore-to-camel-case: false
    #仅在开发环境打印日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
   #逻辑删除
  global-config:
    enable-sql-runner: true #需要开启
    db-config:
      logic-delete-field: delete
      logic-delete-value: 1 # 默认 1  代表删除
      logic-not-delete-value: 0 #默认 0 代表存在
#接口文档配置
knife4j:
  enable: true
  openapi:
    title: 协同云图库接口文档
    description: "协同云图库"
    concat: zx
    version: v1.0
    group:
      test1:
        group-name: 分组名称
        api-rule: package
        api-rule-resources:
          - com.katomegumi.zxpicture.interfaces.controller #指定controller

# 对象存储配置（需要从腾讯云获取）
cos:
  client:
    host: xxx
    secretId: xxx
    secretKey: xxx
    region: xxx
    bucket: xxx
# 阿里云 AI 配置
aliYunAi:
  secret-key: xxxx